package component:pdbtbx-wit;

world pdbtbx-wit {
    record residueinfo {
        seqnumber: u64,
        insertioncode: string,
    }
    
    record residueinfos {
        chain: char,
        residues: list<residueinfo>,
    }
    
    record pdbinfo {
        identifier: option<string>,
        chains: list<char>,
        residuesequencenumbers: list<u64>,
        residuesperchain: list<residueinfos>,
        warnings: list<string>,
    }

    record residue {
        serial-number: s64,
        name: string, // conformer.name[0]
    }

    record chain {
        id: string,
        residues: list<residue>,
    }

    resource pdb {
        constructor();
        info: func() -> result<pdbinfo, list<string>>;
        identifier: func() -> option<string>;
        chains: func() -> list<chain>;
        warnings: func() -> list<string>;
    }
    
    export open-pdb-raw: func(pdb: string) -> result<tuple<pdb, list<string>>, list<string>>;
    // TODO figure out where wasi: imports come from in generated wasm
}
